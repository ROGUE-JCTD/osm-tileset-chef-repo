Overview

This repository creates a generic mapnik tile server with apache2 and PostGIS.

The repo configures a mapnik server but it does not import data into the PostGIS database.

The easiest way to get a dataset is to download a dataset from geofabrique at download.geofabrik.de.  

Using chrome search download.geofabrik.de and find a dataset you want, right click over the [osm.pbf] 
or [osm.bz2] and select copy link address.  This will put the link path into the clipboard.

Next, access the mapnik VM as the vagrant user.  In the Vm commad line enter:

vagrant ssh

Once you are the vagrant user, become the osmdata user.  At the commad line enter:

sudo su - osmdata

As the osmdata user cd to the /tmp directory.

cd /tmp

Download the geofabrique file to this location.  You would enter command wget and then right click the mouse \
and select paste to enter the datafile selected earlier.  The command would look like the following:

wget http://download.geofabrik.de/central-america/belize-latest.osm.pbf

Select enter and the file will download.

To import the file into the database run the following command as the osmdata user.

/opt/osm-tileset-chef-repo/scripts/install_datafile.sh

The install_datafile.sh script is intended to be a quick / flexible way to import the osm data, in either pbf or 
bz2 formats, into the database but it will attempt to import all pbf and bz2 datafiles found in the /tmp directory.  
That said, having more than one pbf or bz2 file could cause the import to fail under certain circumstances.  
Additional warning. Any data in the gis database is deleted as part of the osm import.

After the data is in the database, restart the renderd service:

service renderd restart

It is important to remember renderd will not render tiles until data is in the database and the service must be 
restarted after the data has been loaded. 

Testing the installation

After the dataset is imported into the database the mapnik server should be ready for use.  To test enter the following
in a web browser ( 192.168.99.90 is the default IP the VM is created with.  If that is different for your instance
then change that to the correct IP):

http://192.168.99.90/osm_tiles/0/0/0.png

A tile of the world should appear in the upper left hand corner of the browser window.

Trouble shooting

Apache2

Assuming the VM completed successfully and the data was loaded into the PostGIS database using the script above
then test the Apache2 and renderd service.

To test if apache2 is running enter http://192.168.99.90 in a web browser.  The Apache splash page should return.  
If it does not then restart the apache service.  As root enter service apache2 restart' at a command prompt.  
The apache2 service should restart and come back with an OK, meaning the service has started.

Renderd

Renderd is the map tile renderind daemon.  to check the renderd daemon restart the service.  As root enter 
'service renderd restart' at a command prompt.  Renderd will return with four errors, that is a bug and is 
normal, and an OK, meaning the service has started.

You can also monitor renderd as it handles tile requests.  As the osmdata user enter the following at the command
prompt:

     service renderd stop
     renderd -f -c /usr/local/etc/renderd.conf

Then enter http://192.168.99.90/osm_tiles/0/0/0.png in a web browser.  If the request is being sent to renderd 
you will see the output in the monitor window.

After testing, restart renderd.

     service renderd start

Recently completed:

 - Removed unneseccary mapnik user accounts.  These were created following an openstreetmap wiki guideline 
   but are unnecessary.
 - Replaced package apache2-threaded-dec with apache2-dev.
 - Replaced ruby-2.0.0-p353 with ruby-2.0.0-p645.  This got rid of the security warnings.
 - Cleaned up test code.
 - Created osm data file import script.
 - replaced genericpostgresql database packages with more secure versions.
 - Updated the README file to be easier for users to do osm data file imports 
 - Updated the README file with ways to test and troubleshoot the installation.

Still to do:

- Review Berksfile and Gemfile.  Build lock files.
- Review code for any leftover test code.
